[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "yea"
version = "0.9.1"
description = "Test harness breaking the sound barrier"
requires-python = ">=3.8"
license = { text = "MIT license" }
dependencies = [
    "coverage",
    "importlib-metadata>=3.0.0",
    "jsonschema",
    "PyYAML",
    "requests",
    "six",
    "typing_extensions",
    "uv",
]

[project.scripts]
yea = "yea.cli:cli"

[tool.setuptools]
package-dir = { "" = "src" }
packages = ["yea"]
include-package-data = true
zip-safe = false

[tool.setuptools.package-data]
"yea" = ["schema-*.json"]
"yea.vendor" = ["**/*.py"]

[tool.setuptools.exclude-package-data]
"*" = ["__pycache__", "__pycache__/*"]

[tool.ruff]
extend-exclude = ["src/yea/vendor/**.py"]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = ["F", "E", "W", "B", "I", "N", "D", "C90", "UP"]
ignore = [
    "B904",
    "E501",
    # pydocstyle rules: https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "D100",  # Allow missing docstrings in modules.
    "D101",  # Allow missing docstrings in classes.
    "D102",  # Allow missing docstrings in public methods.
    "D103",  # Allow missing docstrings in public methods.
    "D104",  # Allow missing docstrings in packages.
    "D105",  # Allow missing docstrings in magic (dunder) methods, e.g. __str__().
    "D106",  # Allow missing docstrings in nested classes.
    "D107",  # Allow missing docstrings in __init__ methods.
    "D205",  # Allow missing blank line between docstring and class.
    "UP022",
    "UP032", # Allow using format instead of f-string.
    "UP036",
]

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "google"
